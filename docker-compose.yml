version: '3.8'

services:
  db:
    image: postgres:14
    container_name: liveevent-db
    environment:
      POSTGRES_DB: LiveEventDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - liveevent-network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: liveevent-api
    depends_on:
      db:
        condition: service_healthy
      localstack:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DOTNET_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=LiveEventDB;Username=postgres;Password=postgres;
      - AllowedOrigins__0=http://localhost:3000
      - AllowedOrigins__1=http://localhost:5001
      - AWS__Region=us-east-1
      - AWS__UserPoolId=us-east-1_000000001
      - AWS__S3BucketName=local-bucket
      - AWS__ServiceURL=http://localstack:4566
    ports:
      - "5000:80"
      - "5001:80"
    networks:
      - liveevent-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - liveevent-network

  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    environment:
      - SERVICES=cognito-idp,s3,xray,logs,cloudwatch
      - DEBUG=1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - EDGE_PORT=4566
    ports:
      - "4566:4566"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./localstack-init:/etc/localstack/init/ready.d"
    networks:
      - liveevent-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  liveevent-network:
    driver: bridge

volumes:
  postgres_data:
